[{"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/App.js":"1","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/reportWebVitals.js":"2","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Home.js":"3","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Login.js":"4","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Signup.js":"5","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/index.js":"6","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Navbar.js":"7","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/CalendarPage.js":"8","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Today.js":"9","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Profile.js":"10","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/TaskDetails.js":"11","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/SelfcareDetails.js":"12","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/TaskForm.js":"13","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/SelfcareForm.js":"14","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/AddDay.js":"15","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Days.js":"16","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/DayCard.js":"17","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/EditDay.js":"18","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/EditMood.js":"19","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/DayDetails.js":"20","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/EditProfileForm.js":"21"},{"size":2072,"mtime":1612756641512,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1612220947120,"results":"24","hashOfConfig":"23"},{"size":877,"mtime":1612539791934,"results":"25","hashOfConfig":"23"},{"size":2160,"mtime":1612539791934,"results":"26","hashOfConfig":"23"},{"size":3068,"mtime":1612539791937,"results":"27","hashOfConfig":"23"},{"size":542,"mtime":1612296795752,"results":"28","hashOfConfig":"23"},{"size":1256,"mtime":1612539791934,"results":"29","hashOfConfig":"23"},{"size":2137,"mtime":1612753937170,"results":"30","hashOfConfig":"23"},{"size":673,"mtime":1612472907791,"results":"31","hashOfConfig":"23"},{"size":2169,"mtime":1612556912786,"results":"32","hashOfConfig":"23"},{"size":1259,"mtime":1612486631291,"results":"33","hashOfConfig":"23"},{"size":1222,"mtime":1612491450368,"results":"34","hashOfConfig":"23"},{"size":1348,"mtime":1612494831605,"results":"35","hashOfConfig":"23"},{"size":1298,"mtime":1612505948652,"results":"36","hashOfConfig":"23"},{"size":1372,"mtime":1612756637106,"results":"37","hashOfConfig":"23"},{"size":548,"mtime":1612556886583,"results":"38","hashOfConfig":"23"},{"size":1414,"mtime":1612556264018,"results":"39","hashOfConfig":"23"},{"size":1196,"mtime":1612554839062,"results":"40","hashOfConfig":"23"},{"size":1243,"mtime":1612555099663,"results":"41","hashOfConfig":"23"},{"size":7747,"mtime":1612554562529,"results":"42","hashOfConfig":"23"},{"size":2284,"mtime":1612553294521,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"f6p3bs",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/App.js",["91"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/reportWebVitals.js",[],["92","93"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Home.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Login.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Signup.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/index.js",[],["94","95"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Navbar.js",["96"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/CalendarPage.js",["97"],"import React, { useState } from 'react';\nimport AddDay from './AddDay'\nimport Calendar from 'react-calendar';\nimport { format } from 'date-fns';\n\nfunction CalendarPage({ onAddDay, currentUser }) {\n    const [date, setDate] = useState(new Date())\n    const [showForm, setShowForm] = useState(false)\n\n    const today = format(date, 'iiii, MMMM do, yyyy')\n\n    // console.log(chosenDay)\n\n    function handleChangeDate(e) {\n        setDate(e)\n    }\n\n    // const dayToRender = days.filter((day) => {\n    //     return (\n    //         day.date === chosenDay\n    //         (setPickedDay(dayToRender))\n    //     )\n    // })\n\n    function showAddDayForm() {\n        setShowForm(!showForm)\n    }\n\n\n    return (\n        <div className='ui raised segment'>\n            <div>\n            <a className=\"ui olive right ribbon label\"><i className='calendar alternate outline icon'></i>calendar</a>\n                <h1 className=\"bungee-font\"> {today} </h1>\n\n                <div className=\"ui basic labeled icon button\" id='add-entry' onClick={showAddDayForm}>\n                    new entry\n                <i class=\"add icon\"></i>\n                </div>\n                {showForm ? <AddDay currentUser={currentUser} onAddDay={onAddDay}/> : null}\n              \n            </div>\n\n            <div className='calendar-container'>\n                <Calendar\n                    value={date}\n                    onChange={handleChangeDate}\n                />\n            </div>\n\n            \n            <div className='ui three column grid'>\n            <div className='note-one'>\n                <div>It's a new day, let's make it count!!!</div>\n            </div>\n            <div className='note-two'>\n                <div>Who has made my life better? Why?</div>\n            </div>\n\n            <div className='note-three'>\n                <div>What can I do differently to improve myself?</div>\n            </div>\n\n            <div className='note-four'>\n                <div>What is something you are proud of this month?</div>\n            </div>\n          \n            </div>\n\n          \n\n        </div>\n\n\n\n    )\n}\n\nexport default CalendarPage;","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Today.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Profile.js",["98"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/TaskDetails.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/SelfcareDetails.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/TaskForm.js",["99"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/SelfcareForm.js",["100"],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/AddDay.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/Days.js",["101"],"import DayCard from './DayCard'\n\nfunction Days({days, onDelete}) {\n\n    const day = days.map((day) => {\n        return (\n            <DayCard key={day.id} day={day} onDelete={onDelete}/>\n        )\n    })\n\n    return (\n        <div className='ui raised segment'style={{backgroundColor: '#a5dee5'}}>\n             <a className=\"ui teal right ribbon label\"><i className='paperclip icon'></i>entries</a>\n            <div className='ui cards centered'>\n                {day}\n            </div>\n        </div>\n       \n        \n    )\n}\n\nexport default Days","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/DayCard.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/EditDay.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/EditMood.js",[],"/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/DayDetails.js",["102","103","104","105","106"],"import React, { useState, useEffect } from \"react\"\nimport TaskDetails from './TaskDetails'\nimport SelfcareDetails from './SelfcareDetails'\nimport TaskForm from './TaskForm'\nimport SelfcareForm from './SelfcareForm'\nimport { useParams } from \"react-router-dom\";\nimport EditDay from './EditDay';\nimport EditMood from './EditMood';\n\n\nfunction NewDay() {\n    const [day, setDay] = useState(null);\n    const [date, setDate] = useState(null)\n    const [entry, setEntry] = useState(null)\n    const [mood, setMood] = useState(null)\n    const [water, setWater] = useState(null)\n    const [tasks, setTasks] = useState(null)\n    const [selfcare, setSelfcare] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n\n\n    const [isEditingEntry, setIsEditingEntry] = useState(false)\n    const [isEditingMood, setIsEditingMood] = useState(false)\n\n    const params = useParams()\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/days/${params.id}`)\n            .then(r => r.json())\n            .then((day) => {\n                setDay(day)\n                formatDate(day.date)\n                setEntry(day.entry)\n                setMood(day.mood)\n                setWater(day.water_intake)\n                setTasks(day.tasks)\n                setSelfcare(day.selfcares)\n                setIsLoaded(true)\n            })\n    }, [params.id])\n\n    if (!isLoaded) return <h2>Loading...</h2>;\n\n\n    function formatDate(date) {\n        let formattedDate = new Date(date.split('-'))\n        const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n        return setDate(formattedDate.toLocaleDateString('en-US', options))\n    }\n\n\n    const taskItems = tasks.map((task) => {\n        return (\n            <TaskDetails key={task.id} description={task.description} status={task.complete} id={task.id} onDelete={handleDeleteTask} />\n        )\n    })\n\n    const selfcareItems = selfcare.map((selfcare) => {\n        return (\n            <SelfcareDetails key={selfcare.id} description={selfcare.description} status={selfcare.complete} id={selfcare.id} onDelete={handleDeleteSelfcare} />\n        )\n    })\n\n    function handleAddTask(newTask) {\n        const newTaskList = [...tasks, newTask]\n        setTasks(newTaskList)\n    }\n\n    function handleSelfcare(newSelfcare) {\n        const newSelfcareList = [...selfcare, newSelfcare]\n        setSelfcare(newSelfcareList)\n    }\n\n    function handleUpdateEntry(newEntry) {\n        setEntry(newEntry)\n        setIsEditingEntry(false)\n    }\n\n    function handleUpdateMood(newMood) {\n        setMood(newMood)\n        setIsEditingMood(false)\n    }\n\n    function handleUpdateWaterEight() {\n        const updateWater = {\n            water_intake: day.water_intake += 8\n        }\n\n        fetch(`http://localhost:3000/days/${day.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(updateWater)\n        })\n            .then(res => res.json())\n            .then(waterData => setWater(waterData.water_intake))\n\n    }\n\n    function handleUpdateWaterSixteen() {\n        const updateWater = {\n            water_intake: day.water_intake += 16\n        }\n\n        fetch(`http://localhost:3000/days/${day.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(updateWater)\n        })\n            .then(res => res.json())\n            .then(waterData => setWater(waterData.water_intake))\n\n    }\n\n    function handleDeleteTask(id) {\n        const updatedTasks = tasks.filter((task) => {\n            return task.id !== id\n        })\n        setTasks(updatedTasks)\n    }\n\n    function handleDeleteSelfcare(id) {\n        const updatedSelfcare = selfcare.filter((sc) => {\n            return sc.id !== id\n        })\n        setSelfcare(updatedSelfcare)\n    }\n\n\n\n    return (\n        <div className='ui raised segment'>\n            <div className='date-page'> \n                <h2 className='bungee-font'>{date}</h2> \n            </div>\n\n            {/* GRATIFICATION DIV */}\n            <div className='column'>\n                <div className=' ui raised segment ' style={{ backgroundColor: '#ffcfdf' }}>\n                    <a className=\"ui pink ribbon label\"><i className='heart icon'></i>gratification</a>\n                    <h3 className='grateful-title'>Today I'm grateful for ...</h3>\n\n                    <button className='clear-button pencil' onClick={() => setIsEditingEntry(isEditingEntry => !isEditingEntry)}>\n                        <i className=\"pencil alternate icon\" />\n                    </button>\n\n                    {isEditingEntry ? <EditDay dayEntry={entry} id={day.id} onUpdateEntry={handleUpdateEntry} /> : <div className='grateful'> {entry} </div>}\n\n                </div>\n\n                {/* TO DO DIV */}\n\n                <div className='ui two column grid'>\n                    <div className=\"column\" >\n                        <div className='ui raised segment' style={{ backgroundColor: '#fefdca' }}>\n\n                            <a className=\"ui yellow ribbon label\"><i className='bookmark icon'></i>priorities</a>\n                            <h3 className='to-do'>To Do</h3>\n                            {taskItems}\n                            <TaskForm setAllTasks={handleAddTask} dayId={day.id} />\n                        </div>\n\n                        {/* MOOD DIV */}\n\n                        <div className='ui raised segment' style={{ backgroundColor: '#a5dee5' }}>\n                            <a className=\"ui teal ribbon label\"><i className='smile outline icon'></i>mood</a>\n                            <h4 className='mood-title'> How I'm feeling . . .</h4>\n\n                            <button className='clear-button pencil' onClick={() => setIsEditingMood(isEditingMood => !isEditingMood)}>\n                                    <i className=\"pencil alternate icon\" />\n                            </button>\n\n                            {isEditingMood ? <EditMood dayMood={mood} id={day.id} onUpdateMood={handleUpdateMood} /> : <p className='mood'>{mood}</p>}\n\n                        </div>\n                    </div>\n\n                    <div className='column'>\n\n                        {/* WATER DIV */}\n\n                        <div className='ui raised segment'>\n                            <a className=\"ui blue right ribbon label\"><i className='tint icon' />daily water intake</a>\n                            <h4 className='water-title'>I drank {water} oz. of water today</h4>\n                            <div>\n                                <button className='update-water' onClick={handleUpdateWaterEight}>\n                                    <i className='tint icon' /> + 8 oz.\n                                </button>\n                                <button className='update-water' onClick={handleUpdateWaterSixteen}>\n                                    <i className='tint icon' /> + 16 oz.\n                                </button>\n                            </div>\n\n                        </div>\n                        {/* SELFCARE DIV */}\n\n                        <div className='ui raised segment' style={{ backgroundColor: '#e0f9b5' }}>\n                            <a className=\"ui olive right ribbon label\"><i className='cloud icon'></i>mindfulness  </a>\n                            <h3 className='selfcare-title'>self-care checklist</h3>\n                            {selfcareItems}\n                            <SelfcareForm dayId={day.id} setAllSelfcare={handleSelfcare} />\n\n                        </div>\n\n\n                    </div>\n\n                </div>\n            </div>\n\n\n\n\n\n\n\n\n        </div>\n    )\n}\n\nexport default NewDay","/Users/thecodeplanner/Flatiron/code/Mod5/remindful/remindful-frontend/src/EditProfileForm.js",[],{"ruleId":"107","severity":1,"message":"108","line":17,"column":9,"nodeType":"109","messageId":"110","endLine":17,"endColumn":16},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":28,"column":21,"nodeType":"119","endLine":28,"endColumn":66},{"ruleId":"117","severity":1,"message":"118","line":33,"column":13,"nodeType":"119","endLine":33,"endColumn":56},{"ruleId":"117","severity":1,"message":"118","line":20,"column":13,"nodeType":"119","endLine":20,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":21,"column":9,"nodeType":"122","messageId":"123","endLine":27,"endColumn":18,"fix":"124"},{"ruleId":"120","severity":1,"message":"121","line":17,"column":9,"nodeType":"122","messageId":"123","endLine":23,"endColumn":18,"fix":"125"},{"ruleId":"117","severity":1,"message":"118","line":13,"column":14,"nodeType":"119","endLine":13,"endColumn":56},{"ruleId":"117","severity":1,"message":"118","line":143,"column":21,"nodeType":"119","endLine":143,"endColumn":57},{"ruleId":"117","severity":1,"message":"118","line":160,"column":29,"nodeType":"119","endLine":160,"endColumn":67},{"ruleId":"117","severity":1,"message":"118","line":169,"column":29,"nodeType":"119","endLine":169,"endColumn":65},{"ruleId":"117","severity":1,"message":"118","line":186,"column":29,"nodeType":"119","endLine":186,"endColumn":71},{"ruleId":"117","severity":1,"message":"118","line":201,"column":29,"nodeType":"119","endLine":201,"endColumn":72},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["126"],"no-negated-in-lhs",["127"],["126"],["127"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"128","text":"129"},{"range":"130","text":"129"},"no-global-assign","no-unsafe-negation",[674,677],".",[584,587]]